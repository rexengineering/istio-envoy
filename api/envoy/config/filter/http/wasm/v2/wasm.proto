syntax = "proto3";

package envoy.config.filter.http.wasm.v2;
option java_package = "io.envoyproxy.envoy.config.filter.http.wasm.v2";
option go_package = "v2";
import "validate/validate.proto";
import "envoy/config/wasm/v2/wasm.proto";

// [#protodoc-title: Wasm]
// Wasm :ref:`configuration overview <config_http_filters_wasm>`.

message Wasm {
  // A unique ID so that multiple filters/services can call into the same VM.
  string id = 1;
  // Configuration for starting a new VM (optionally associated with the given 'id').
  envoy.config.wasm.v2.VmConfig vm_config = 2;
  // Wasm service configuration string e.g. a serialized protobuf which will be the
  // argument to the VM configure() call.
  string configuration = 3;
}
