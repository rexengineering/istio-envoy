syntax = "proto3";

package envoy.config.filter.listener.original_src.v2alpha1;
option java_package = "io.envoyproxy.envoy.config.filter.listener.original_src.v2alpha1";
option java_multiple_files = true;

option go_package = "v2alpha1";

import "validate/validate.proto";

// [#protodoc-title: Original Src Filter]
// Use the Original source address on upstream connections.
// TODO(klarose): Add ref to docs

// The Original Src filter binds upstream connections to the original source address determined
// for the connection. This address could come from something like the Proxy Protocol filter, or it
// could come from trusted http headers.
message OriginalSrc {

  // Whether to bind the port to the one used in the original downstream connection.
  // [#not-implemented-warn:]
  bool bind_port = 1;

  // set the SO_MARK option on the upstream connection's socket. Used to ensure that non-local
  // addresses may be routed back through envoy when binding to the original source address.
  // [#not-implemented-warn:]
  uint32 mark = 2;
}
